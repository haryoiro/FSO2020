{"version":3,"sources":["components/Togglable.js","components/Blog.js","components/BlogForm.js","components/LoginForm.js","components/Message.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["Togglable","React","forwardRef","props","ref","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","onClick","style","buttonLabel","secondButtonLabel","children","Blog","blog","updateLikes","handleDelete","likes","setLikes","isOwner","username","JSON","parse","window","localStorage","loggedInBlogUser","key","id","margin","padding","border","title","url","type","event","preventDefault","value","author","undefined","user","isUsername","BlogForm","handleSubmit","setTitle","setAuthor","setUrl","onSubmit","onChange","target","autoComplete","LoginForm","handleLogin","password","setPassword","setUsername","Message","message","className","status","token","config","headers","Authorization","replace","setToken","newToken","getAll","axios","get","then","response","data","create","newObject","a","post","request","addLikes","put","res","deleteBlog","delete","login","credentials","App","blogs","setBlogs","error","errorMessage","setErrorMessage","useEffect","blogService","console","log","loggedUserJSON","getItem","loginObject","loginService","setItem","stringify","setTimeout","handleLogout","clear","blogFormRef","createRef","handleBlogSubmit","blogObject","current","addedBlog","concat","find","n","updateBlog","confirm","toUpperCase","sort","b","map","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cb107832.chunk.js","sourcesContent":["import React, { useState, useImperativeHandle } from 'react'\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(true)\n\n  const hideWhenVisible = { display : visible ? '' : 'none' }\n  const showWhenVisible = { display : visible ? 'none' : '' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return { toggleVisibility }\n  })\n\n  return (\n    <>\n      <button onClick={toggleVisibility} style={hideWhenVisible}>{props.buttonLabel}</button>\n      <button onClick={toggleVisibility} style={showWhenVisible}>{props.secondButtonLabel}</button>\n      <div style={showWhenVisible}>{props.children}</div>\n    </>\n  )\n})\n\nexport default Togglable","import React, { useState } from 'react'\r\nimport Togglable from './Togglable'\r\n\r\nconst Blog = ({ blog, updateLikes, handleDelete }) => {\r\n  const [likes, setLikes] = useState(blog.likes)\r\n\r\n  const style = {\r\n    margin: '5px 0',\r\n    padding: '5px 10px',\r\n    border: '1px solid black',\r\n  }\r\n\r\n  const addLikes = (event) => {\r\n    event.preventDefault()\r\n    setLikes(likes+1)\r\n    updateLikes({\r\n      ...blog\r\n    })\r\n  }\r\n  const deletePost = (event) => {\r\n    event.preventDefault()\r\n    handleDelete({\r\n      ...blog\r\n    })\r\n  }\r\n  const isUsername = (blog) => {\r\n    return blog.user !== undefined\r\n      ? isOwner(blog.user.username)\r\n      : false\r\n  }\r\n  const isOwner = (username) => {\r\n    const currentUser = JSON.parse(window.localStorage.loggedInBlogUser).username\r\n    return currentUser === username\r\n    ? true\r\n    : false\r\n  }\r\n\r\n  return (\r\n    <div key={blog.id} style={style}>\r\n      {blog.title + 'ã€€'}\r\n      <Togglable buttonLabel='view' secondButtonLabel='hide'>\r\n        <div>{blog.url+'\\n'} </div>\r\n        <div>{likes+'\\n'} <input type=\"submit\" onClick={addLikes} value='LIKE'/> </div>\r\n        <div>{blog.author} </div>\r\n        {isUsername(blog) &&\r\n          <input type='submit' onClick={deletePost} value='DELETE'/>\r\n        }\r\n      </Togglable>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Blog\r\n","import React, { useState } from 'react'\n\nconst BlogForm = ({ handleSubmit }) => {\n  const [title, setTitle] = useState('')\n  const [author, setAuthor] = useState('')\n  const [url, setUrl] = useState('')\n\n  const handleChangeTitle = (event) => {\n    setTitle(event.target.value)\n  }\n\n  const handleChangeAuthor = (event) => {\n    setAuthor(event.target.value)\n  }\n\n  const handleChangeUrl = (event) => {\n    setUrl(event.target.value)\n  }\n\n  const addBlog = (event) => {\n    event.preventDefault()\n\n    handleSubmit({\n      title: title,\n      author: author,\n      url: url,\n    })\n\n    setTitle('')\n    setAuthor('')\n    setUrl('')\n  }\n\n  return (\n    <form onSubmit={addBlog}>\n      TITLE<br />\n      <input type=\"text\" value={title} onChange={handleChangeTitle} autoComplete=\"off\"/><br />\n      AUTHOR<br />\n      <input type=\"text\" value={author} onChange={handleChangeAuthor} autoComplete=\"off\"/><br />\n      URL<br />\n      <input type=\"text\" value={url} onChange={handleChangeUrl} autoComplete=\"off\" /><br />\n      <input type=\"submit\" value=\"POST\" />\n      <br />\n      <br />\n    </form>\n  )\n}\n\nexport default BlogForm","import React, { useState } from 'react'\n\nconst LoginForm = ({ handleLogin }) => {\n  const [password, setPassword] = useState('')\n  const [username, setUsername] = useState('')\n\n  const handleChangeUser = (event) => {\n    setUsername(event.target.value)\n  }\n  const handleChangePassword = (event) => {\n    setPassword(event.target.value)\n  }\n  const userLogin = (event) => {\n    event.preventDefault()\n    handleLogin({\n      username: username,\n      password: password,\n    })\n    setUsername('')\n    setPassword('')\n  }\n\n  return (\n    <>\n      <form onSubmit={userLogin}>\n        USERNAME\n        <input type=\"text\" value={username} onChange={handleChangeUser}/><br/>\n        PASSWORD\n        <input type=\"text\" value={password} onChange={handleChangePassword}/><br/>\n        <input type=\"submit\" value=\"LOGIN\" />\n      </form>\n    </>\n)\n}\n\nexport default LoginForm","import React from 'react'\n\nconst Message = ({ message }) => (\n  <>\n  {message.message !== null &&\n    <div className=\"message\">\n      {message.status\n        ? <div className=\"error\">{message.message}</div>\n        : <div className=\"success\">{message.message}</div>\n      }\n    </div>\n  }\n  </>\n)\n\nexport default Message\n","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = ''\n\nconst config = {\n  headers: { Authorization: token.replace(/\\n/g, '') }\n}\n\nconst setToken = ( newToken ) => {\n  token = `Bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async (newObject) => {\n  const request = await axios.post(baseUrl, newObject, config)\n  return request.data\n}\n\nconst addLikes = async (id, post) => {\n  const request = axios.put(`${baseUrl}/${id}`, post, config)\n  return request.then(res => res.data)\n}\n\nconst deleteBlog = async (id) => {\n  const request = await axios.delete(`${baseUrl}/${id}`, config)\n  return request.then(res => res.data)\n}\n\nexport default {\n  setToken,\n  getAll,\n  create,\n  addLikes,\n  deleteBlog,\n }","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const res = await axios.post(baseUrl, credentials)\n  return res.data\n}\n\n\nexport default { login }","import React, { useState, useEffect } from 'react'\n\nimport Blog from './components/Blog'\nimport BlogForm from './components/BlogForm'\nimport LoginForm from './components/LoginForm'\nimport Message from './components/Message'\nimport Togglable from './components/Togglable'\n\nimport blogService from './services/blogs'\nimport loginService from './services/login'\n\nimport './App.css'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState(null)\n  const [errorMessage, setErrorMessage] = useState({ message: null, error: false })\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>{\n        setBlogs( blogs )\n    })\n    console.log(blogs)\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedInBlogUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUsername(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const handleLogin = async (loginObject) => {\n    try {\n      const user = await loginService.login(loginObject)\n      window.localStorage.setItem('loggedInBlogUser', JSON.stringify(user))\n      await blogService.setToken(user.token)\n\n      setUsername(user)\n    } catch (err) {\n      setErrorMessage({ message: 'Wrong username or password', status: true })\n      setTimeout(() => {\n        setErrorMessage({ message: null, error: false })\n      }, 3000)\n    }\n  }\n\n  const handleLogout = async (event) => {\n    event.preventDefault()\n\n    window.localStorage.clear()\n    setUsername(null)\n\n    setErrorMessage({ message: 'Logout success', status: false })\n    setTimeout(() => { setErrorMessage({ message: null, error: false }) }, 3000)\n  }\n\n  const blogFormRef = React.createRef()\n\n  const handleBlogSubmit = async (blogObject) => {\n    try {\n      blogFormRef.current.toggleVisibility()\n      const addedBlog = await blogService.create(blogObject)\n      setBlogs(blogs.concat(addedBlog))\n\n      setErrorMessage({ message: `a new blog ${blogObject.title} added`, status: false })\n      setTimeout(() => { setErrorMessage({ message: null, error: false }) }, 3000)\n\n    } catch (err) {\n      setErrorMessage({ message: `${err}`, status: true })\n      setTimeout(() => { setErrorMessage({ message: null, error: false }) }, 3000)\n    }\n  }\n\n  const updateLikes = async (event) => {\n    const updateBlog = await blogs.find((n) => n.id === event.id)\n    updateBlog.likes += 1\n    delete updateBlog.user\n    try {\n      await blogService.addLikes(event.id, updateBlog)\n    } catch (err) {\n      setErrorMessage(err, false)\n      setTimeout(() => { setErrorMessage({ message: null, error: false }) }, 3000)\n    }\n  }\n  const sortHelper = (a, b) => {\n    if (a.likes<b.likes) return  1\n    if (a.likes>b.likes) return -1\n    return 0\n  }\n  const handleDelete = async (event) => {\n    console.log(event)\n      try {\n        if (window.confirm('Remove?')) {\n          await blogService.deleteBlog(event.id)\n        }\n      } catch (err) {\n        setErrorMessage(err, false)\n        setTimeout(() => { setErrorMessage({ message: null, error: false }) }, 3000)\n      }\n  }\n\n  return (\n    <div>\n      <h2>BLOGS</h2>\n      <Message message={errorMessage} />\n      {username !== null ?\n        <>\n          <div>\n            {username.username.toUpperCase()} LOGGED INã€€\n            <button onClick={handleLogout}>LOGOUT</button>\n          </div>\n          <Togglable buttonLabel='NEW POST' ref={blogFormRef} secondButtonLabel='CANCEL'>\n            <h3>CREATE NEW</h3>\n            <BlogForm handleSubmit={handleBlogSubmit}/>\n          </Togglable>\n          <div>\n            {blogs.sort(sortHelper).map(blog =>\n              <Blog\n                key={blog.id}\n                blog={blog}\n                updateLikes={updateLikes}\n                handleDelete={handleDelete}\n              />)\n            }\n          </div>\n        </> :\n        <Togglable buttonLabel='LOGIN' secondButtonLabel='CANCEL'>\n          <LoginForm handleLogin={handleLogin}/>\n        </Togglable>\n      }\n    </div>\n  )\n}\n\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}