{"version":3,"sources":["components/Togglable.jsx","components/Blog.jsx","components/BlogForm.jsx","components/LoggedIn.jsx","components/LoginForm.jsx","components/Message.jsx","services/blogs.js","services/login.js","App.jsx","index.jsx"],"names":["Togglable","React","forwardRef","props","ref","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","type","onClick","style","buttonLabel","secondButtonLabel","children","displayName","defaultProps","PropTypes","element","Blog","blog","updateLikes","handleDelete","likes","setLikes","key","id","margin","padding","border","title","url","event","preventDefault","value","author","currBlog","undefined","user","username","JSON","parse","window","localStorage","loggedInBlogUser","isUsername","BlogForm","handleSubmit","setTitle","setAuthor","setUrl","onSubmit","onChange","target","autoComplete","LoggedIn","handleLogout","toUpperCase","displayname","LoginForm","handleLogin","password","setPassword","setUsername","Message","message","status","className","token","setToken","newToken","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","request","addLikes","put","res","deleteBlog","delete","login","credentials","App","blogs","setBlogs","error","errorMessage","setErrorMessage","blogFormRef","createRef","useEffect","blogService","returnedBlogs","loggedUserJSON","getItem","loginObject","loginService","setItem","stringify","setTimeout","clear","handleBlogSubmit","blogObject","current","addedBlog","concat","find","n","updateBlog","confirm","filter","sort","b","map","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9a0906c6.chunk.js","sourcesContent":["import React, { useState, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(true)\n\n  const hideWhenVisible = { display: visible ? '' : 'none' }\n  const showWhenVisible = { display: visible ? 'none' : '' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => ({ toggleVisibility }))\n\n  return (\n    <>\n      <button type=\"submit\" onClick={toggleVisibility} style={hideWhenVisible}>{props.buttonLabel}</button>\n      <button type=\"submit\" onClick={toggleVisibility} style={showWhenVisible}>{props.secondButtonLabel}</button>\n      <div style={showWhenVisible}>{props.children}</div>\n    </>\n  )\n})\n\nTogglable.displayName = 'Togglable'\n\nTogglable.defaultProps = {\n  children: PropTypes.element,\n}\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired,\n  secondButtonLabel: PropTypes.string.isRequired,\n  children: PropTypes.element,\n}\n\nexport default Togglable\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nimport Togglable from './Togglable'\n\nconst Blog = ({ blog, updateLikes, handleDelete }) => {\n  const [likes, setLikes] = useState(blog.likes)\n\n  const style = {\n    margin: '5px 0',\n    padding: '5px 10px',\n    border: '1px solid black',\n  }\n\n  const addLikes = (event) => {\n    event.preventDefault()\n    setLikes(likes + 1)\n    updateLikes({\n      ...blog,\n    })\n  }\n\n  const deletePost = (event) => {\n    event.preventDefault()\n    handleDelete({\n      ...blog,\n    })\n  }\n\n  const isOwner = (username) => {\n    const currentUser = JSON.parse(window.localStorage.loggedInBlogUser).username\n    return currentUser === username\n  }\n\n  const isUsername = (currBlog) => (currBlog.user !== undefined\n    ? isOwner(currBlog.user.username)\n    : false)\n\n\n  return (\n    <div key={blog.id} style={style}>\n      {`${blog.title} `}\n      <Togglable buttonLabel=\"view\" secondButtonLabel=\"hide\">\n        <div>\n          {`${blog.url}\\n`}\n          {' '}\n        </div>\n        <div>\n          {`${likes}\\n`}\n          {' '}\n          <input type=\"submit\" onClick={addLikes} value=\"LIKE\" />\n          {' '}\n        </div>\n        <div>\n          {blog.author}\n          {' '}\n        </div>\n        {isUsername(blog)\n          && <input type=\"submit\" onClick={deletePost} value=\"DELETE\" />}\n      </Togglable>\n    </div>\n  )\n}\n\nBlog.displayName = 'Blog'\n\nBlog.defaultProps = {\n  blog: null,\n  handleDelete: null,\n}\n\nBlog.propTypes = {\n  blog: PropTypes.objectOf({\n    id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    url: PropTypes.string,\n    author: PropTypes.string,\n    likes: PropTypes.number,\n  }),\n  updateLikes: PropTypes.func.isRequired,\n  handleDelete: PropTypes.func,\n}\n\nexport default Blog\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst BlogForm = ({ handleSubmit }) => {\n  const [title, setTitle] = useState('')\n  const [author, setAuthor] = useState('')\n  const [url, setUrl] = useState('')\n\n  const handleChangeTitle = (event) => {\n    setTitle(event.target.value)\n  }\n\n  const handleChangeAuthor = (event) => {\n    setAuthor(event.target.value)\n  }\n\n  const handleChangeUrl = (event) => {\n    setUrl(event.target.value)\n  }\n\n  const addBlog = (event) => {\n    event.preventDefault()\n\n    handleSubmit({\n      title,\n      author,\n      url,\n    })\n\n    setTitle('')\n    setAuthor('')\n    setUrl('')\n  }\n\n  return (\n    <form onSubmit={addBlog}>\n      <h3>CREATE NEW</h3>\n      TITLE\n      <br />\n      <input type=\"text\" value={title} onChange={handleChangeTitle} autoComplete=\"off\" />\n      <br />\n      AUTHOR\n      <br />\n      <input type=\"text\" value={author} onChange={handleChangeAuthor} autoComplete=\"off\" />\n      <br />\n      URL\n      <br />\n      <input type=\"text\" value={url} onChange={handleChangeUrl} autoComplete=\"off\" />\n      <br />\n      <input type=\"submit\" value=\"POST\" />\n      <br />\n      <br />\n    </form>\n  )\n}\n\nBlogForm.displayName = 'BlogForm'\n\nBlogForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n}\n\nexport default BlogForm\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst LoggedIn = ({ handleLogout, username: { username } }) => (\n  <div>\n    <div>\n      {username.toUpperCase()}\n      {' LOGGED IN'}\n    </div>\n    <button type=\"submit\" onClick={handleLogout}>LOGOUT</button>\n  </div>\n)\n\nLoggedIn.displayname = 'LoggedIn'\n\nLoggedIn.defaultProps = {\n  username: '',\n}\n\nLoggedIn.propTypes = {\n  handleLogout: PropTypes.func.isRequired,\n  username: PropTypes.shape({\n    username: PropTypes.string,\n  }),\n}\n\nexport default LoggedIn\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst LoginForm = ({ handleLogin }) => {\n  const [password, setPassword] = useState('')\n  const [username, setUsername] = useState('')\n\n  const handleChangeUser = (event) => {\n    setUsername(event.target.value)\n  }\n  const handleChangePassword = (event) => {\n    setPassword(event.target.value)\n  }\n  const userLogin = (event) => {\n    event.preventDefault()\n    handleLogin({\n      username,\n      password,\n    })\n    setUsername('')\n    setPassword('')\n  }\n\n  return (\n    <form onSubmit={userLogin}>\n      USERNAME\n      <input type=\"text\" value={username} onChange={handleChangeUser} />\n      <br />\n      PASSWORD\n      <input type=\"text\" value={password} onChange={handleChangePassword} />\n      <br />\n      <input type=\"submit\" value=\"LOGIN\" />\n    </form>\n  )\n}\n\nLoginForm.displayName = 'LoginForm'\n\nLoginForm.propTypes = {\n  handleLogin: PropTypes.func.isRequired,\n}\n\nexport default LoginForm\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Message = ({ message: { message, status } }) => (\n  <div>\n    {message !== null\n    && (\n      <div className=\"message\">\n        {status\n          ? <div className=\"error\">{message}</div>\n          : <div className=\"success\">{message}</div>}\n      </div>\n    )}\n  </div>\n)\n\nMessage.displayName = 'Message'\n\nMessage.defaultProps = {\n  message: {\n    message: '',\n    status: false,\n  },\n}\n\nMessage.propTypes = {\n  message: PropTypes.shape({\n    message: PropTypes.string,\n    status: PropTypes.bool,\n  }),\n}\n\nexport default Message\n","import axios from 'axios'\n\nconst baseUrl = '/api/blogs'\n\nlet token = ''\n\nconst setToken = (newToken) => {\n  token = `Bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then((response) => response.data)\n}\n\nconst create = async (newObject) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const request = await axios.post(baseUrl, newObject, config)\n  return request.data\n}\n\nconst addLikes = async (id, post) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const request = await axios.put(`${baseUrl}/${id}`, post, config)\n  return request.then((res) => res.data)\n}\n\nconst deleteBlog = async (id) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const request = await axios.delete(`${baseUrl}/${id}`, config)\n  return request.data\n}\n\nexport default {\n  setToken,\n  getAll,\n  create,\n  addLikes,\n  deleteBlog,\n}\n","import axios from 'axios'\n\nconst baseUrl = '/api/login'\n\nconst login = async (credentials) => {\n  const res = await axios.post(baseUrl, credentials)\n  return res.data\n}\n\n\nexport default { login }\n","import React, { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport BlogForm from './components/BlogForm'\nimport LoggedIn from './components/LoggedIn'\nimport LoginForm from './components/LoginForm'\nimport Message from './components/Message'\nimport Togglable from './components/Togglable'\n\n\nimport blogService from './services/blogs'\nimport loginService from './services/login'\n\nimport './App.css'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState(null)\n  const [errorMessage, setErrorMessage] = useState({ message: null, error: false })\n\n  const blogFormRef = React.createRef()\n\n  useEffect(() => {\n    blogService\n      .getAll()\n      .then((returnedBlogs) => {\n        setBlogs(returnedBlogs)\n      })\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedInBlogUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUsername(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const handleLogin = async (loginObject) => {\n    try {\n      const user = await loginService.login(loginObject)\n\n      window.localStorage.setItem('loggedInBlogUser', JSON.stringify(user))\n      await blogService.setToken(user.token)\n\n      setUsername(user)\n    } catch (err) {\n      setErrorMessage({ message: 'Wrong username or password', status: true })\n\n      setTimeout(() => { setErrorMessage({ message: null, error: false }) }, 3000)\n    }\n  }\n\n  const handleLogout = async (event) => {\n    event.preventDefault()\n\n    window.localStorage.clear()\n    setUsername(null)\n\n    setErrorMessage({ message: 'Logout success', status: false })\n    setTimeout(() => { setErrorMessage({ message: null, error: false }) }, 3000)\n  }\n\n  const handleBlogSubmit = async (blogObject) => {\n    try {\n      blogFormRef.current.toggleVisibility()\n\n      const addedBlog = await blogService.create(blogObject)\n      setBlogs(blogs.concat(addedBlog))\n\n      setErrorMessage({ message: `a new blog ${blogObject.title} added`, status: false })\n      setTimeout(() => { setErrorMessage({ message: null, error: false }) }, 3000)\n    } catch (err) {\n      setErrorMessage({ message: `${err}`, status: true })\n      setTimeout(() => { setErrorMessage({ message: null, error: false }) }, 3000)\n    }\n  }\n\n  const updateLikes = async (event) => {\n    const updateBlog = await blogs.find((n) => n.id === event.id)\n\n    updateBlog.likes += 1\n    delete updateBlog.user\n\n    await blogService.addLikes(event.id, updateBlog)\n  }\n\n  const sortHelper = (a, b) => {\n    if (a.likes < b.likes) return 1\n    if (a.likes > b.likes) return -1\n    return 0\n  }\n\n  const handleDelete = async (event) => {\n    try {\n      if (window.confirm('Remove?')) {\n        await blogService.deleteBlog(event.id)\n        setBlogs(blogs.filter((n) => n.id !== event.id))\n      }\n    } catch (err) {\n      setErrorMessage(err, false)\n      setTimeout(() => { setErrorMessage({ message: null, error: false }) }, 3000)\n    }\n  }\n\n  return (\n    <div>\n      <h2>BLOGS</h2>\n      <Message message={errorMessage} />\n      {username !== null\n        ? (\n          <div>\n            <LoggedIn handleLogout={handleLogout} username={username} />\n            <Togglable buttonLabel=\"NEW POST\" ref={blogFormRef} secondButtonLabel=\"CANCEL\">\n              <BlogForm handleSubmit={handleBlogSubmit} />\n            </Togglable>\n            <div>\n              {blogs.sort(sortHelper).map((blog) => (\n                <Blog\n                  key={blog.id}\n                  blog={blog}\n                  updateLikes={updateLikes}\n                  handleDelete={handleDelete}\n                />\n              ))}\n            </div>\n          </div>\n        ) : (\n          <Togglable buttonLabel=\"LOGIN\" secondButtonLabel=\"CANCEL\">\n            <LoginForm handleLogin={handleLogin} />\n          </Togglable>\n        )}\n    </div>\n  )\n}\n\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}