{"version":3,"sources":["components/Togglable.jsx","components/Blog.jsx","components/BlogForm.jsx","components/LoggedIn.jsx","components/LoginForm.jsx","components/Message.jsx","services/blogs.js","services/login.js","App.jsx","index.jsx"],"names":["Togglable","React","forwardRef","props","ref","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","type","onClick","style","className","buttonLabel","secondButtonLabel","children","displayName","Blog","blog","updateLikes","handleDelete","likes","setLikes","key","id","margin","padding","border","title","url","event","preventDefault","value","author","currBlog","undefined","user","username","JSON","parse","window","localStorage","loggedInBlogUser","isUsername","defaultProps","BlogForm","handleSubmit","setTitle","setAuthor","setUrl","onSubmit","onChange","target","autoComplete","LoggedIn","handleLogout","toUpperCase","displayname","LoginForm","handleLogin","password","setPassword","setUsername","Message","message","status","token","setToken","newToken","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","request","addLikes","put","res","deleteBlog","delete","login","credentials","App","blogs","setBlogs","error","errorMessage","setErrorMessage","blogFormRef","createRef","useEffect","blogService","returnedBlogs","loggedUserJSON","getItem","loginObject","loginService","setItem","stringify","setTimeout","clear","handleBlogSubmit","blogObject","current","addedBlog","concat","find","n","updateBlog","confirm","filter","sort","b","map","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5a16cf13.chunk.js","sourcesContent":["import React, { useState, useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(true)\n\n  const hideWhenVisible = { display: visible ? '' : 'none' }\n  const showWhenVisible = { display: visible ? 'none' : '' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => ({ toggleVisibility }))\n\n  return (\n    <>\n      <button type=\"submit\" onClick={toggleVisibility} style={hideWhenVisible} className=\"hide-button\">{props.buttonLabel}</button>\n      <button type=\"submit\" onClick={toggleVisibility} style={showWhenVisible} className=\"visible-button\">{props.secondButtonLabel}</button>\n      <div style={showWhenVisible}>{props.children}</div>\n    </>\n  )\n})\n\nTogglable.displayName = 'Togglable'\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired,\n  secondButtonLabel: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n}\n\nexport default Togglable\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nimport Togglable from './Togglable'\n\nconst Blog = ({ blog, updateLikes, handleDelete }) => {\n  const [likes, setLikes] = useState(blog.likes)\n  const [visible, setVisible] = useState(true)\n\n  const style = {\n    margin: '5px 0',\n    padding: '5px 10px',\n    border: '1px solid black',\n  }\n\n  const hideWhenVisible = { display: visible ? '' : 'none' }\n  const showWhenVisible = { display: visible ? 'none' : '' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  const addLikes = (event) => {\n    event.preventDefault()\n    setLikes(likes + 1)\n    updateLikes({\n      ...blog,\n    })\n  }\n\n  const deletePost = (event) => {\n    event.preventDefault()\n    handleDelete({\n      ...blog,\n    })\n  }\n\n  const isOwner = (username) => {\n    const currentUser = JSON.parse(window.localStorage.loggedInBlogUser).username\n    return currentUser === username\n  }\n\n  const isUsername = (currBlog) => (currBlog.user !== undefined\n    ? isOwner(currBlog.user.username)\n    : false)\n\n\n  return (\n    <div key={blog.id} style={style}>\n      <span>{`${blog.title} `}</span>\n      <button type=\"submit\" onClick={toggleVisibility} style={hideWhenVisible} className=\"show-button\">SHOW</button>\n      <button type=\"submit\" onClick={toggleVisibility} style={showWhenVisible} className=\"hide-button\">HIDE</button>\n      <div style={showWhenVisible} className=\"blog-details\">\n        { blog.url } <br />\n        { likes } <input type=\"submit\" onClick={addLikes} value=\"LIKE\" className=\"like-button\" /> <br />\n        { blog.author } <br />\n        {isUsername(blog)\n          && <input type=\"submit\" onClick={deletePost} value=\"DELETE\" />}\n      </div>\n    </div>\n  )\n}\n\nBlog.displayName = 'Blog'\n\nBlog.defaultProps = {\n  blog: null,\n  handleDelete: null,\n}\n\nBlog.propTypes = {\n  blog: PropTypes.shape({\n    id: PropTypes.string,\n    title: PropTypes.string,\n    url: PropTypes.string,\n    author: PropTypes.string,\n    likes: PropTypes.number,\n  }),\n  updateLikes: PropTypes.func.isRequired,\n  handleDelete: PropTypes.func,\n}\n\nexport default Blog\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst BlogForm = ({ handleSubmit }) => {\n  const [title, setTitle] = useState('')\n  const [author, setAuthor] = useState('')\n  const [url, setUrl] = useState('')\n\n  const handleChangeTitle = (event) => {\n    setTitle(event.target.value)\n  }\n\n  const handleChangeAuthor = (event) => {\n    setAuthor(event.target.value)\n  }\n\n  const handleChangeUrl = (event) => {\n    setUrl(event.target.value)\n  }\n\n  const addBlog = (event) => {\n    event.preventDefault()\n\n    handleSubmit({\n      title,\n      author,\n      url,\n    })\n\n    setTitle('')\n    setAuthor('')\n    setUrl('')\n  }\n\n  return (\n    <form onSubmit={addBlog} id=\"blogForm\">\n      <h3>CREATE NEW</h3>\n      <p>TITLE    <input type=\"text\" value={title} onChange={handleChangeTitle} autoComplete=\"off\" id=\"titleForm\" /></p>\n      <p>AUTHOR   <input type=\"text\" value={author} onChange={handleChangeAuthor} autoComplete=\"off\" id=\"authorForm\" /> </p>\n      <p>URL      <input type=\"text\" value={url} onChange={handleChangeUrl} autoComplete=\"off\" id=\"urlForm\" /> </p>\n      <input type=\"submit\" value=\"POST\" id=\"postBlogSubmit\"/>\n    </form>\n  )\n}\n\nBlogForm.displayName = 'BlogForm'\n\nBlogForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n}\n\nexport default BlogForm\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst LoggedIn = ({ handleLogout, username: { username } }) => (\n  <div>\n    <div>\n      {username.toUpperCase()}\n      {' LOGGED IN'}\n    </div>\n    <button type=\"submit\" onClick={handleLogout}>LOGOUT</button>\n  </div>\n)\n\nLoggedIn.displayname = 'LoggedIn'\n\nLoggedIn.propTypes = {\n  handleLogout: PropTypes.func.isRequired,\n  username: PropTypes.shape({\n    username: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default LoggedIn\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst LoginForm = ({ handleLogin }) => {\n  const [password, setPassword] = useState('')\n  const [username, setUsername] = useState('')\n\n  const handleChangeUser = (event) => {\n    setUsername(event.target.value)\n  }\n  const handleChangePassword = (event) => {\n    setPassword(event.target.value)\n  }\n  const userLogin = (event) => {\n    event.preventDefault()\n    handleLogin({\n      username,\n      password,\n    })\n    setUsername('')\n    setPassword('')\n  }\n\n  return (\n    <form onSubmit={userLogin} id=\"loginForm\">\n      USERNAME\n      <input type=\"text\" value={username} onChange={handleChangeUser} id=\"username\" />\n      <br />\n      PASSWORD\n      <input type=\"text\" value={password} onChange={handleChangePassword} id=\"password\" />\n      <br />\n      <input type=\"submit\" value=\"LOGIN\" id=\"loginsubmitbutton\"/>\n    </form>\n  )\n}\n\nLoginForm.displayName = 'LoginForm'\n\nLoginForm.propTypes = {\n  handleLogin: PropTypes.func.isRequired,\n}\n\nexport default LoginForm\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Message = ({ message }) => (\n  <div id=\"message\">\n    {message.message !== null\n    && (\n      <div className=\"message\">\n        {message.status\n          ? <div className=\"error\" id=\"error\">{message.message}</div>\n          : <div className=\"success\" id=\"success\">{message.message}</div>}\n      </div>\n    )}\n  </div>\n)\n\nMessage.displayName = 'Message'\n\nMessage.propTypes = {\n  message: PropTypes.shape({\n    message: PropTypes.string,\n    status: PropTypes.bool,\n  }).isRequired,\n}\n\nexport default Message\n","import axios from 'axios'\n\nconst baseUrl = '/api/blogs'\n\nlet token = ''\n\nconst setToken = (newToken) => {\n  token = `Bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then((response) => response.data)\n}\n\nconst create = async (newObject) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const request = await axios.post(baseUrl, newObject, config)\n  return request.data\n}\n\nconst addLikes = async (id, post) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const request = await axios.put(`${baseUrl}/${id}`, post, config)\n  return request.then((res) => res.data)\n}\n\nconst deleteBlog = async (id) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const request = await axios.delete(`${baseUrl}/${id}`, config)\n  return request.data\n}\n\nexport default {\n  setToken,\n  getAll,\n  create,\n  addLikes,\n  deleteBlog,\n}\n","import axios from 'axios'\n\nconst baseUrl = '/api/login'\n\nconst login = async (credentials) => {\n  const res = await axios.post(baseUrl, credentials)\n  return res.data\n}\n\n\nexport default { login }\n","import React, { useState, useEffect } from 'react'\n\nimport Blog from './components/Blog'\nimport BlogForm from './components/BlogForm'\nimport LoggedIn from './components/LoggedIn'\nimport LoginForm from './components/LoginForm'\nimport Message from './components/Message'\nimport Togglable from './components/Togglable'\n\nimport blogService from './services/blogs'\nimport loginService from './services/login'\n\nimport './App.css'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState(null)\n  const [errorMessage, setErrorMessage] = useState({ message: null, error: false })\n\n  const blogFormRef = React.createRef()\n\n  useEffect(() => {\n    blogService\n      .getAll()\n      .then((returnedBlogs) => {\n        setBlogs(returnedBlogs)\n      })\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedInBlogUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUsername(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const handleLogin = async (loginObject) => {\n    try {\n      const user = await loginService.login(loginObject)\n\n      window.localStorage.setItem('loggedInBlogUser', JSON.stringify(user))\n      await blogService.setToken(user.token)\n\n      setUsername(user)\n    } catch (err) {\n      setErrorMessage({ message: 'Wrong username or password', status: true })\n\n      setTimeout(() => { setErrorMessage({ message: null, error: false }) }, 5000)\n    }\n  }\n\n  const handleLogout = async (event) => {\n    event.preventDefault()\n\n    window.localStorage.clear()\n    setUsername(null)\n\n    setErrorMessage({ message: 'Logout success', status: false })\n    setTimeout(() => { setErrorMessage({ message: null, error: false }) }, 5000)\n  }\n\n  const handleBlogSubmit = async (blogObject) => {\n    try {\n      blogFormRef.current.toggleVisibility()\n\n      const addedBlog = await blogService.create(blogObject)\n      setBlogs(blogs.concat(addedBlog))\n\n      setErrorMessage({ message: `a new blog ${blogObject.title} added`, status: false })\n      setTimeout(() => { setErrorMessage({ message: null, error: false }) }, 5000)\n    } catch (err) {\n      setErrorMessage({ message: `${err}`, status: true })\n      setTimeout(() => { setErrorMessage({ message: null, error: false }) }, 5000)\n    }\n  }\n\n  const updateLikes = async (event) => {\n    const updateBlog = await blogs.find((n) => n.id === event.id)\n\n    updateBlog.likes += 1\n    delete updateBlog.user\n\n    await blogService.addLikes(event.id, updateBlog)\n  }\n\n  const sortHelper = (a, b) => {\n    if (a.likes < b.likes) return 1\n    if (a.likes > b.likes) return -1\n    return 0\n  }\n\n  const handleDelete = async (event) => {\n    try {\n      if (window.confirm('Remove?')) {\n        await blogService.deleteBlog(event.id)\n        setBlogs(blogs.filter((n) => n.id !== event.id))\n      }\n    } catch (err) {\n      setErrorMessage(err, false)\n      setTimeout(() => { setErrorMessage({ message: null, error: false }) }, 5000)\n    }\n  }\n\n  return (\n    <div>\n      <h2>BLOGS</h2>\n      <Message message={errorMessage} />\n      {username !== null\n        ? (\n          <div>\n            <LoggedIn handleLogout={handleLogout} username={username} />\n            <Togglable buttonLabel=\"NEW POST\" ref={blogFormRef} secondButtonLabel=\"CANCEL\">\n              <BlogForm handleSubmit={handleBlogSubmit} />\n            </Togglable>\n            <div>\n              {blogs.sort(sortHelper).map((blog) => (\n                <Blog\n                  key={blog.id}\n                  blog={blog}\n                  updateLikes={updateLikes}\n                  handleDelete={handleDelete}\n                />\n              ))}\n            </div>\n          </div>\n        ) : (\n          <Togglable buttonLabel=\"LOGIN\" secondButtonLabel=\"CANCEL\">\n            <LoginForm handleLogin={handleLogin} />\n          </Togglable>\n        )}\n    </div>\n  )\n}\n\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}